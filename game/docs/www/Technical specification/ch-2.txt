2.	Interactive functionality
2.1	RTS Functions
2.1.1	Selecting an object

*	Performing: Move mouse on top an object (etc. building or mech) and click left button once.
*	Implementation: CDirectInput class supplies mouse-coordinates, which are used to determine if there is an object underneath to be selected. If there is, 'selected'-variable is updated.

2.1.2	Unselecting an object

*	Performing: While an object is selected, move mouse cursor to empty place and click left button once. Also pressing 'esc' on keyboard unselects object.
*	Implementation: CDirectInput class supplies mouse-coordinates, which are used to determine if there is an object underneath to be selected. If there isn't, 'selection'-variable is cleared. Same happens if CDirectInput class supplies keyboard input 'esc'.

2.1.3	Binding a selection

*	Performing: While an object is selected, hold 'Ctrl' button down and choose a number to bind the object to.
*	Implementation: If 'selected'-variable is not empty, it's contents are copied to 'bind[number]'-variable.

2.1.4	Referring to bound object

*	Performing: In any state of the game, if an object is bound to a certain number, pressing this number selects the object immediately.
*	Implementation: If CDirectInput class tells that a number was pressed, 'bind[number]'-variable is checked, and if not empty it's contents is copied to 'selected'-variable.

2.1.5	Building a building

*	Performing: 
*	Implementation:

2.1.6	Cancelling building of a building

*	Performing: 
*	Implementation:

2.1.7	Using action queue to develop technology and build mechs

*	Performing: 
*	Implementation:

2.1.8	Changing mech's mode

*	Performing: 
*	Implementation:

2.1.9	Adding mech actions to queue
*	Performing: 
*	Implementation:





2.2	FPS Functions
2.2.1	Moving
2.2.2	Aiming
2.2.3	Shooting
2.2.4	Changing a weapon
2.2.5	


