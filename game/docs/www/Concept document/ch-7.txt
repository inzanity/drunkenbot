7.	Technologies

7.1	Enabling technologies
Platform for the game can be any modern Windows PC, with DirectX 9.0 runtime libraries and a 3D accelerator installed. Controlling of the mech could ideally be done with a joystick (not implemented in this version), but at least keyboard and mouse are required for playing. If network-gaming is implemented, it will require a network connection with lag small enough to allow good gaming experience. Since it is a real-time game, major lag will cause big problems.

7.2	Level editor
Level editor needs minimally to be able to define a heightfield for the landscape, and add buildings and mechs to the map. For storyline missions, there is also a need for scripting ability and action points. The scripting facility needs commands like attack, move, give units, win and lose, with the ability to attach these to action points and/or timers). Level editor is for internal use only, and will not ship with the game.

7.3	Other tools

7.3.1	Technology trees
Weapons, buildings and other technology tree data will be stored in xml-files. This helps content creation, as xml editor can be used to configure technology trees, and there is no need for rebuilding the game.

7.3.2	AI and Scripting
Scripting language Lua will be used for scripting. Free fuzzy logic library (FFLL) may be used for higher level strategical AI.

7.3.3	Particle editor
In-house particle system editor will be implemented. In this game it will be for internal use only, and will not ship with the game. However, particle editor will be freely available from our website.
